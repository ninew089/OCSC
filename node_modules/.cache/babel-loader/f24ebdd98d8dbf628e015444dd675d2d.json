{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export default function get(_x,_x2){return _get.apply(this,arguments);}function _get(){_get=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(start,end){var getCookie,token,url,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getCookie=function _getCookie(name){var nameEQ=name+'=';var ca=document.cookie.split(';');for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)===' '){c=c.substring(1,c.length);}if(c.indexOf(nameEQ)===0)return c.substring(nameEQ.length,c.length);}return null;};token=getCookie('token');url=\"\".concat(process.env.PUBLIC_URL)+'/api/answersheets/'+start+'/'+end;_context.prev=3;_context.next=6;return fetch(url,{method:'GET',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}});case 6:response=_context.sent;if(!response.ok){_context.next=11;break;}_context.next=10;return response.clone().json().catch(function(){return response.text();});case 10:return _context.abrupt(\"return\",_context.sent);case 11:if(!(response.status<=501)){_context.next=13;break;}return _context.abrupt(\"return\",response.status);case 13:_context.next=24;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](3);if(!_context.t0.response){_context.next=22;break;}console.log(_context.t0.response.headers);return _context.abrupt(\"return\",_context.t0.response.status);case 22:if(_context.t0.request){console.log(_context.t0.request);}else{console.log('Error',_context.t0.message);}case 23:console.log(_context.t0.config);case 24:case\"end\":return _context.stop();}}},_callee,null,[[3,15]]);}));return _get.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/service/getTable.js"],"names":["get","start","end","getCookie","name","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","token","url","process","env","PUBLIC_URL","fetch","method","headers","Authorization","response","ok","clone","json","catch","text","status","console","log","request","message","config"],"mappings":"qVAAA,uBAA8BA,CAAAA,GAA9B,4C,6EAAe,iBAAmBC,KAAnB,CAA0BC,GAA1B,KACJC,CAAAA,SADI,oIACJA,SADI,qBACMC,IADN,CACY,CACvB,GAAIC,CAAAA,MAAM,CAAGD,IAAI,CAAG,GAApB,CACA,GAAIE,CAAAA,EAAE,CAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAT,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,EAAE,CAACK,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAClC,GAAIE,CAAAA,CAAC,CAAGN,EAAE,CAACI,CAAD,CAAV,CACA,MAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,IAAgB,GAAvB,EAA4BD,CAAC,CAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,CAAeF,CAAC,CAACD,MAAjB,CAAJ,CAA5B,CACA,GAAIC,CAAC,CAACG,OAAF,CAAUV,MAAV,IAAsB,CAA1B,CAA6B,MAAOO,CAAAA,CAAC,CAACE,SAAF,CAAYT,MAAM,CAACM,MAAnB,CAA2BC,CAAC,CAACD,MAA7B,CAAP,CAC9B,CACD,MAAO,KAAP,CACD,CAVY,CAYPK,KAZO,CAYCb,SAAS,CAAC,OAAD,CAZV,CAaPc,GAbO,CAcX,UAAGC,OAAO,CAACC,GAAR,CAAYC,UAAf,EAA8B,oBAA9B,CAAqDnB,KAArD,CAA6D,GAA7D,CAAmEC,GAdxD,uCAgBYmB,CAAAA,KAAK,CAACJ,GAAD,CAAM,CAChCK,MAAM,CAAE,KADwB,CAGhCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYR,KAAZ,CAFN,CAHuB,CAAN,CAhBjB,QAgBLS,QAhBK,mBAwBPA,QAAQ,CAACC,EAxBF,iDAyBID,CAAAA,QAAQ,CAClBE,KADU,GAEVC,IAFU,GAGVC,KAHU,CAGJ,iBAAMJ,CAAAA,QAAQ,CAACK,IAAT,EAAN,EAHI,CAzBJ,qEA+BPL,QAAQ,CAACM,MAAT,EAAmB,GA/BZ,2DAgCFN,QAAQ,CAACM,MAhCP,+FAmCP,YAAMN,QAnCC,0BAoCTO,OAAO,CAACC,GAAR,CAAY,YAAMR,QAAN,CAAeF,OAA3B,EApCS,gCAqCF,YAAME,QAAN,CAAeM,MArCb,UAsCJ,GAAI,YAAMG,OAAV,CAAmB,CACxBF,OAAO,CAACC,GAAR,CAAY,YAAMC,OAAlB,EACD,CAFM,IAEA,CACLF,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqB,YAAME,OAA3B,EACD,CA1CU,QA2CXH,OAAO,CAACC,GAAR,CAAY,YAAMG,MAAlB,EA3CW,qE","sourcesContent":["export default async function get(start, end) {\n  function getCookie(name) {\n    var nameEQ = name + '='\n    var ca = document.cookie.split(';')\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i]\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length)\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length)\n    }\n    return null\n  }\n\n  const token = getCookie('token')\n  const url =\n    `${process.env.PUBLIC_URL}` + '/api/answersheets/' + start + '/' + end\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (response.ok) {\n      return await response\n        .clone()\n        .json()\n        .catch(() => response.text())\n      // return await response.json();\n    }\n    if (response.status <= 501) {\n      return response.status\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.headers)\n      return error.response.status\n    } else if (error.request) {\n      console.log(error.request)\n    } else {\n      console.log('Error', error.message)\n    }\n    console.log(error.config)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}