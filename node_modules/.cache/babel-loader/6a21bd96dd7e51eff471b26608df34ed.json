{"ast":null,"code":"export default async function add(something) {\n  function getCookie(name) {\n    var nameEQ = name + '=';\n    var ca = document.cookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n\n    return null;\n  }\n\n  const uid = getCookie('uid');\n  const url = `${process.env.PUBLIC_URL}` + '/api/admins/' + uid;\n  const token = getCookie('token');\n\n  try {\n    console.log('json post:', JSON.stringify(something));\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(something)\n    });\n\n    if (response.ok) {\n      return await response.json();\n    }\n\n    if (response.status <= 501) {\n      console.log(response.status);\n      return response.status;\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      console.log(error.response.status);\n      return error.response.status;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return 999;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/service/put.js"],"names":["add","something","getCookie","name","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","uid","url","process","env","PUBLIC_URL","token","console","log","JSON","stringify","response","fetch","method","headers","Authorization","body","ok","json","status","error","data","request"],"mappings":"AAAA,eAAe,eAAeA,GAAf,CAAmBC,SAAnB,EAA8B;AAC3C,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,QAAIC,MAAM,GAAGD,IAAI,GAAG,GAApB;AACA,QAAIE,EAAE,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAT;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,EAAE,CAACK,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,UAAIE,CAAC,GAAGN,EAAE,CAACI,CAAD,CAAV;;AACA,aAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,MAAgB,GAAvB,EAA4BD,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeF,CAAC,CAACD,MAAjB,CAAJ;;AAC5B,UAAIC,CAAC,CAACG,OAAF,CAAUV,MAAV,MAAsB,CAA1B,EAA6B,OAAOO,CAAC,CAACE,SAAF,CAAYT,MAAM,CAACM,MAAnB,EAA2BC,CAAC,CAACD,MAA7B,CAAP;AAC9B;;AACD,WAAO,IAAP;AACD;;AACD,QAAMK,GAAG,GAAGb,SAAS,CAAC,KAAD,CAArB;AACA,QAAMc,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,EAA1B,GAA8B,cAA9B,GAA+CJ,GAA3D;AACA,QAAMK,KAAK,GAAGlB,SAAS,CAAC,OAAD,CAAvB;;AACA,MAAI;AACFmB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,IAAI,CAACC,SAAL,CAAevB,SAAf,CAA1B;AACA,UAAMwB,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAM;AAChCW,MAAAA,MAAM,EAAE,KADwB;AAEhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAAST,KAAM;AAFxB,OAFuB;AAMhCU,MAAAA,IAAI,EAAEP,IAAI,CAACC,SAAL,CAAevB,SAAf;AAN0B,KAAN,CAA5B;;AASA,QAAIwB,QAAQ,CAACM,EAAb,EAAiB;AACf,aAAO,MAAMN,QAAQ,CAACO,IAAT,EAAb;AACD;;AACD,QAAIP,QAAQ,CAACQ,MAAT,IAAmB,GAAvB,EAA4B;AAC1BZ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACQ,MAArB;AACA,aAAOR,QAAQ,CAACQ,MAAhB;AACD;AACF,GAlBD,CAkBE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACT,QAAV,EAAoB;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACT,QAAN,CAAeU,IAA3B;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACT,QAAN,CAAeQ,MAA3B;AACA,aAAOC,KAAK,CAACT,QAAN,CAAeQ,MAAtB;AACD,KAJD,MAIO,IAAIC,KAAK,CAACE,OAAV,EAAmB;AACxB,aAAOF,KAAK,CAACE,OAAb;AACD,KAFM,MAEA;AACL,aAAO,GAAP;AACD;AACF;AACF","sourcesContent":["export default async function add(something) {\n  function getCookie(name) {\n    var nameEQ = name + '='\n    var ca = document.cookie.split(';')\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i]\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length)\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length)\n    }\n    return null\n  }\n  const uid = getCookie('uid')\n  const url = `${process.env.PUBLIC_URL}` + '/api/admins/' + uid\n  const token = getCookie('token')\n  try {\n    console.log('json post:', JSON.stringify(something))\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(something),\n    })\n\n    if (response.ok) {\n      return await response.json()\n    }\n    if (response.status <= 501) {\n      console.log(response.status)\n      return response.status\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data)\n      console.log(error.response.status)\n      return error.response.status\n    } else if (error.request) {\n      return error.request\n    } else {\n      return 999\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}