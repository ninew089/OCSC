{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export default function post(_x,_x2){return _post.apply(this,arguments);}function _post(){_post=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(something,uid){var url,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"\".concat(process.env.PUBLIC_URL)+\"/api/tokens/\"+uid;_context.prev=1;_context.next=4;return fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/problem+json; charset=utf-8\"},body:JSON.stringify(something)});case 4:response=_context.sent;if(!response.ok){_context.next=9;break;}_context.next=8;return response.json();case 8:return _context.abrupt(\"return\",_context.sent);case 9:if(!(response.status<=501)){_context.next=11;break;}return _context.abrupt(\"return\",response.status);case 11:_context.next=24;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);if(!_context.t0.response){_context.next=19;break;}return _context.abrupt(\"return\",_context.t0.response.status);case 19:if(!_context.t0.request){_context.next=23;break;}return _context.abrupt(\"return\",_context.t0.request);case 23:return _context.abrupt(\"return\",999);case 24:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return _post.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/service/postlogin.js"],"names":["post","something","uid","url","process","env","PUBLIC_URL","fetch","method","headers","body","JSON","stringify","response","ok","json","status","request"],"mappings":"qVAAA,uBAA8BA,CAAAA,IAA9B,6C,+EAAe,iBAAoBC,SAApB,CAA+BC,GAA/B,mIACPC,GADO,CACD,UAAGC,OAAO,CAACC,GAAR,CAAYC,UAAf,EAA8B,cAA9B,CAA+CJ,GAD9C,uCAGYK,CAAAA,KAAK,CAACJ,GAAD,CAAM,CAChCK,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,CACP,eAAgB,yCADT,CAFuB,CAKhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeX,SAAf,CAL0B,CAAN,CAHjB,QAGLY,QAHK,mBAWPA,QAAQ,CAACC,EAXF,+CAYID,CAAAA,QAAQ,CAACE,IAAT,EAZJ,mEAcPF,QAAQ,CAACG,MAAT,EAAmB,GAdZ,2DAeFH,QAAQ,CAACG,MAfP,+FAkBP,YAAMH,QAlBC,0DAmBF,YAAMA,QAAN,CAAeG,MAnBb,cAoBA,YAAMC,OApBN,0DAqBF,YAAMA,OArBJ,0CAuBF,GAvBE,uE","sourcesContent":["export default async function post(something, uid) {\n  const url = `${process.env.PUBLIC_URL}` + \"/api/tokens/\" + uid;\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/problem+json; charset=utf-8\",\n      },\n      body: JSON.stringify(something),\n    });\n\n    if (response.ok) {\n      return await response.json();\n    }\n    if (response.status <= 501) {\n      return response.status;\n    }\n  } catch (error) {\n    if (error.response) {\n      return error.response.status;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return 999;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}