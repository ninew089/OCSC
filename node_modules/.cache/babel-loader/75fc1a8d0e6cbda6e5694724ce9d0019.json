{"ast":null,"code":"import _objectSpread from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Fragment}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Grid from\"@material-ui/core/Grid\";import TextField from\"@material-ui/core/TextField\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import educationData from\"../../Data/educationData\";import majorData from\"../../Data/majorData\";// สร้างstyle\nvar useStyles=makeStyles(function(theme){return{formControl:{minWidth:320,\"& input\":{fontFamily:\"Prompt\"},\"& label\":{fontFamily:\"Prompt\"}}};});export default function SimpleSelect(_ref){var data=_ref.data,setEducations=_ref.setEducations;var classes=useStyles();var educate=data.educate,majorName=data.majorName;var options=educationData.map(function(option){var firstLetter=option.education[0].toUpperCase();return _objectSpread({firstLetter:/[0-9]/.test(firstLetter)?\"0-9\":firstLetter},option);});var options_major=majorData.map(function(option){var firstLetter=option.major[0].toUpperCase();return _objectSpread({firstLetter:/[0-9]/.test(firstLetter)?\"0-9\":firstLetter},option);});return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,\"\\u0E1B\\u0E23\\u0E30\\u0E27\\u0E31\\u0E15\\u0E34\\u0E01\\u0E32\\u0E23\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\"),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",spacing:1},/*#__PURE__*/React.createElement(\"div\",{className:classes.formControl},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,md:12,xs:12},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",padding:\"2\"},/*#__PURE__*/React.createElement(Autocomplete,{value:educate,onChange:function onChange(e,value){return setEducations(_objectSpread({},data,{educate:value}));},options:options.sort(function(ก,อ){return-อ.firstLetter.localeCompare(ก.firstLetter);}),groupBy:function groupBy(option){return option.firstLetter;},getOptionLabel:function getOptionLabel(option){return option.education;},fullWidth:true,id:\"auto-complete\",autoComplete:true,includeInputInList:true,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"\\u0E23\\u0E30\\u0E14\\u0E31\\u0E1A\\u0E01\\u0E32\\u0E23\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\",margin:\"normal\"}));}}))),/*#__PURE__*/React.createElement(Grid,{item:true,md:12,xs:12},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",padding:\"2\"},/*#__PURE__*/React.createElement(Autocomplete,{value:majorName,onChange:function onChange(e,value){return setEducations(_objectSpread({},data,{majorName:value}));},options:options_major.sort(function(ก,อ){return-อ.firstLetter.localeCompare(ก.firstLetter);}),groupBy:function groupBy(option){return option.firstLetter;},getOptionLabel:function getOptionLabel(option){return option.major;},fullWidth:true,id:\"auto-complete\",autoComplete:true,includeInputInList:true,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"\\u0E2A\\u0E32\\u0E02\\u0E32\\u0E27\\u0E34\\u0E0A\\u0E32\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\\u0E01\\u0E32\\u0E23\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32/\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\\u0E2D\\u0E22\\u0E39\\u0E48\",margin:\"normal\"}));}})))))));}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/Pages/user/Education.js"],"names":["React","Fragment","makeStyles","Grid","TextField","Autocomplete","educationData","majorData","useStyles","theme","formControl","minWidth","fontFamily","SimpleSelect","data","setEducations","classes","educate","majorName","options","map","option","firstLetter","education","toUpperCase","test","options_major","major","e","value","sort","ก","อ","localeCompare","params"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport educationData from \"../../Data/educationData\";\nimport majorData from \"../../Data/majorData\";\n\n// สร้างstyle\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 320,\n    \"& input\": {\n      fontFamily: \"Prompt\",\n    },\n    \"& label\": {\n      fontFamily: \"Prompt\",\n    },\n  },\n}));\n\nexport default function SimpleSelect({ data, setEducations }) {\n  const classes = useStyles();\n  const { educate, majorName } = data;\n  const options = educationData.map((option) => {\n    const firstLetter = option.education[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\n      ...option,\n    };\n  });\n  const options_major = majorData.map((option) => {\n    const firstLetter = option.major[0].toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? \"0-9\" : firstLetter,\n      ...option,\n    };\n  });\n\n  return (\n    <Fragment>\n      <h1>ประวัติการศึกษา</h1>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <div className={classes.formControl}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            spacing={1}\n          >\n            <Grid item md={12} xs={12}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                padding=\"2\"\n              >\n                <Autocomplete\n                  value={educate}\n                  onChange={(e, value) =>\n                    setEducations({ ...data, educate: value })\n                  }\n                  options={options.sort(\n                    (ก, อ) => -อ.firstLetter.localeCompare(ก.firstLetter)\n                  )}\n                  groupBy={(option) => option.firstLetter}\n                  getOptionLabel={(option) => option.education}\n                  fullWidth\n                  id=\"auto-complete\"\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"ระดับการศึกษา\"\n                      margin=\"normal\"\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n            <Grid item md={12} xs={12}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                padding=\"2\"\n              >\n                <Autocomplete\n                  value={majorName}\n                  onChange={(e, value) =>\n                    setEducations({ ...data, majorName: value })\n                  }\n                  options={options_major.sort(\n                    (ก, อ) => -อ.firstLetter.localeCompare(ก.firstLetter)\n                  )}\n                  groupBy={(option) => option.firstLetter}\n                  getOptionLabel={(option) => option.major}\n                  fullWidth\n                  id=\"auto-complete\"\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"สาขาวิชาที่สำเร็จการศึกษา/กำลังศึกษาอยู่\"\n                      margin=\"normal\"\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </Grid>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}