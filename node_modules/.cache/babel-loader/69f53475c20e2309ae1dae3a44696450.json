{"ast":null,"code":"export default async function get(start, end) {\n  const url = `${process.env.PUBLIC_URL}` + '/api/statistics/' + start + '/' + end;\n\n  function getCookie(name) {\n    var nameEQ = name + '=';\n    var ca = document.cookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n\n    return null;\n  }\n\n  const uid = getCookie('uid');\n  const token = getCookie('token');\n\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    if (response.ok) {\n      return await response.clone().json().catch(() => response.text());\n    }\n\n    if (response.status <= 501) {\n      return response.status;\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.headers);\n      return error.response.status;\n    } else if (error.request) {\n      console.log(error.request);\n    } else {\n      console.log('Error', error.message);\n    }\n\n    console.log(error.config);\n  }\n}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/service/getStatic.js"],"names":["get","start","end","url","process","env","PUBLIC_URL","getCookie","name","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","uid","token","response","fetch","method","headers","Authorization","ok","clone","json","catch","text","status","error","console","log","request","message","config"],"mappings":"AAAA,eAAe,eAAeA,GAAf,CAAmBC,KAAnB,EAA0BC,GAA1B,EAA+B;AAC5C,QAAMC,GAAG,GACN,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,EAA1B,GAA8B,kBAA9B,GAAmDL,KAAnD,GAA2D,GAA3D,GAAiEC,GADnE;;AAEA,WAASK,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,QAAIC,MAAM,GAAGD,IAAI,GAAG,GAApB;AACA,QAAIE,EAAE,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAT;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,EAAE,CAACK,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,UAAIE,CAAC,GAAGN,EAAE,CAACI,CAAD,CAAV;;AACA,aAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,MAAgB,GAAvB,EAA4BD,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,EAAeF,CAAC,CAACD,MAAjB,CAAJ;;AAC5B,UAAIC,CAAC,CAACG,OAAF,CAAUV,MAAV,MAAsB,CAA1B,EAA6B,OAAOO,CAAC,CAACE,SAAF,CAAYT,MAAM,CAACM,MAAnB,EAA2BC,CAAC,CAACD,MAA7B,CAAP;AAC9B;;AACD,WAAO,IAAP;AACD;;AACD,QAAMK,GAAG,GAAGb,SAAS,CAAC,KAAD,CAArB;AACA,QAAMc,KAAK,GAAGd,SAAS,CAAC,OAAD,CAAvB;;AAEA,MAAI;AACF,UAAMe,QAAQ,GAAG,MAAMC,KAAK,CAACpB,GAAD,EAAM;AAChCqB,MAAAA,MAAM,EAAE,KADwB;AAGhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAFxB;AAHuB,KAAN,CAA5B;;AAQA,QAAIC,QAAQ,CAACK,EAAb,EAAiB;AACf,aAAO,MAAML,QAAQ,CAClBM,KADU,GAEVC,IAFU,GAGVC,KAHU,CAGJ,MAAMR,QAAQ,CAACS,IAAT,EAHF,CAAb;AAID;;AACD,QAAIT,QAAQ,CAACU,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,aAAOV,QAAQ,CAACU,MAAhB;AACD;AACF,GAlBD,CAkBE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACX,QAAV,EAAoB;AAClBY,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACX,QAAN,CAAeG,OAA3B;AACA,aAAOQ,KAAK,CAACX,QAAN,CAAeU,MAAtB;AACD,KAHD,MAGO,IAAIC,KAAK,CAACG,OAAV,EAAmB;AACxBF,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KAFM,MAEA;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACI,OAA3B;AACD;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,MAAlB;AACD;AACF","sourcesContent":["export default async function get(start, end) {\n  const url =\n    `${process.env.PUBLIC_URL}` + '/api/statistics/' + start + '/' + end\n  function getCookie(name) {\n    var nameEQ = name + '='\n    var ca = document.cookie.split(';')\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i]\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length)\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length)\n    }\n    return null\n  }\n  const uid = getCookie('uid')\n  const token = getCookie('token')\n\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    if (response.ok) {\n      return await response\n        .clone()\n        .json()\n        .catch(() => response.text())\n    }\n    if (response.status <= 501) {\n      return response.status\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.headers)\n      return error.response.status\n    } else if (error.request) {\n      console.log(error.request)\n    } else {\n      console.log('Error', error.message)\n    }\n    console.log(error.config)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}