{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export default function add(_x){return _add.apply(this,arguments);}function _add(){_add=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(something){var url,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"\".concat(process.env.PUBLIC_URL)+'/api/answersheets/1';_context.prev=1;_context.next=4;return fetch(url,{method:'POST',headers:{'Content-Type':'application/problem+json; charset=utf-8'},body:JSON.stringify(something)});case 4:response=_context.sent;if(!response.ok){_context.next=9;break;}_context.next=8;return response.json();case 8:return _context.abrupt(\"return\",_context.sent);case 9:if(!(response.status<=501)){_context.next=12;break;}console.log(response.status);return _context.abrupt(\"return\",response.status);case 12:_context.next=27;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](1);if(!_context.t0.response){_context.next=22;break;}console.log(_context.t0.response.data);console.log(_context.t0.response.status);return _context.abrupt(\"return\",_context.t0.response.status);case 22:if(!_context.t0.request){_context.next=26;break;}return _context.abrupt(\"return\",_context.t0.request);case 26:return _context.abrupt(\"return\",999);case 27:case\"end\":return _context.stop();}}},_callee,null,[[1,14]]);}));return _add.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/service/add.js"],"names":["add","something","url","process","env","PUBLIC_URL","fetch","method","headers","body","JSON","stringify","response","ok","json","status","console","log","data","request"],"mappings":"qVAAA,uBAA8BA,CAAAA,GAA9B,wC,6EAAe,iBAAmBC,SAAnB,mIACPC,GADO,CACD,UAAGC,OAAO,CAACC,GAAR,CAAYC,UAAf,EAA4B,qBAD3B,uCAIYC,CAAAA,KAAK,CAACJ,GAAD,CAAM,CAChCK,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,CACP,eAAgB,yCADT,CAFuB,CAKhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeV,SAAf,CAL0B,CAAN,CAJjB,QAILW,QAJK,mBAYPA,QAAQ,CAACC,EAZF,+CAaID,CAAAA,QAAQ,CAACE,IAAT,EAbJ,mEAiBPF,QAAQ,CAACG,MAAT,EAAmB,GAjBZ,2BAkBTC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,MAArB,EAlBS,gCAmBFH,QAAQ,CAACG,MAnBP,+FAwBP,YAAMH,QAxBC,0BAyBTI,OAAO,CAACC,GAAR,CAAY,YAAML,QAAN,CAAeM,IAA3B,EACAF,OAAO,CAACC,GAAR,CAAY,YAAML,QAAN,CAAeG,MAA3B,EA1BS,gCA2BF,YAAMH,QAAN,CAAeG,MA3Bb,cA4BA,YAAMI,OA5BN,0DA6BF,YAAMA,OA7BJ,0CAgCF,GAhCE,uE","sourcesContent":["export default async function add(something) {\n  const url = `${process.env.PUBLIC_URL}`+'/api/answersheets/1'\n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/problem+json; charset=utf-8',\n      },\n      body: JSON.stringify(something),\n    })\n\n    if (response.ok) {\n      return await response.json()\n\n      // return await response.json();\n    }\n    if (response.status <= 501) {\n      console.log(response.status)\n      return response.status\n\n      // eslint-disable-next-line prefer-promise-reject-errors\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data)\n      console.log(error.response.status)\n      return error.response.status\n    } else if (error.request) {\n      return error.request\n    } else {\n      // Something happened in setting up the request and triggered an Error\n      return 999\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}