{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export default function add(_x){return _add.apply(this,arguments);}function _add(){_add=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(something){var getCookie,uid,url,token,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getCookie=function _getCookie(name){var nameEQ=name+'=';var ca=document.cookie.split(';');for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)===' '){c=c.substring(1,c.length);}if(c.indexOf(nameEQ)===0)return c.substring(nameEQ.length,c.length);}return null;};uid=getCookie('uid');url=\"\".concat(process.env.PUBLIC_URL)+'/api/admins/'+uid;token=getCookie('token');_context.prev=4;console.log('json post:',JSON.stringify(something));_context.next=8;return fetch(url,{method:'PUT',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)},body:JSON.stringify(something)});case 8:response=_context.sent;if(!response.ok){_context.next=13;break;}_context.next=12;return response.json();case 12:return _context.abrupt(\"return\",_context.sent);case 13:if(!(response.status<=501)){_context.next=16;break;}console.log(response.status);return _context.abrupt(\"return\",response.status);case 16:_context.next=31;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](4);if(!_context.t0.response){_context.next=26;break;}console.log(_context.t0.response.data);console.log(_context.t0.response.status);return _context.abrupt(\"return\",_context.t0.response.status);case 26:if(!_context.t0.request){_context.next=30;break;}return _context.abrupt(\"return\",_context.t0.request);case 30:return _context.abrupt(\"return\",999);case 31:case\"end\":return _context.stop();}}},_callee,null,[[4,18]]);}));return _add.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/service/put.js"],"names":["add","something","getCookie","name","nameEQ","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","uid","url","process","env","PUBLIC_URL","token","console","log","JSON","stringify","fetch","method","headers","Authorization","body","response","ok","json","status","data","request"],"mappings":"qVAAA,uBAA8BA,CAAAA,GAA9B,wC,6EAAe,iBAAmBC,SAAnB,KACJC,CAAAA,SADI,wIACJA,SADI,qBACMC,IADN,CACY,CACvB,GAAIC,CAAAA,MAAM,CAAGD,IAAI,CAAG,GAApB,CACA,GAAIE,CAAAA,EAAE,CAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAT,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,EAAE,CAACK,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAClC,GAAIE,CAAAA,CAAC,CAAGN,EAAE,CAACI,CAAD,CAAV,CACA,MAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,IAAgB,GAAvB,EAA4BD,CAAC,CAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,CAAeF,CAAC,CAACD,MAAjB,CAAJ,CAA5B,CACA,GAAIC,CAAC,CAACG,OAAF,CAAUV,MAAV,IAAsB,CAA1B,CAA6B,MAAOO,CAAAA,CAAC,CAACE,SAAF,CAAYT,MAAM,CAACM,MAAnB,CAA2BC,CAAC,CAACD,MAA7B,CAAP,CAC9B,CACD,MAAO,KAAP,CACD,CAVY,CAWPK,GAXO,CAWDb,SAAS,CAAC,KAAD,CAXR,CAYPc,GAZO,CAYD,UAAGC,OAAO,CAACC,GAAR,CAAYC,UAAf,EAA8B,cAA9B,CAA+CJ,GAZ9C,CAaPK,KAbO,CAaClB,SAAS,CAAC,OAAD,CAbV,iBAeXmB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BC,IAAI,CAACC,SAAL,CAAevB,SAAf,CAA1B,EAfW,sBAgBYwB,CAAAA,KAAK,CAACT,GAAD,CAAM,CAChCU,MAAM,CAAE,KADwB,CAEhCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYR,KAAZ,CAFN,CAFuB,CAMhCS,IAAI,CAAEN,IAAI,CAACC,SAAL,CAAevB,SAAf,CAN0B,CAAN,CAhBjB,QAgBL6B,QAhBK,mBAyBPA,QAAQ,CAACC,EAzBF,iDA0BID,CAAAA,QAAQ,CAACE,IAAT,EA1BJ,qEA4BPF,QAAQ,CAACG,MAAT,EAAmB,GA5BZ,2BA6BTZ,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACG,MAArB,EA7BS,gCA8BFH,QAAQ,CAACG,MA9BP,+FAiCP,YAAMH,QAjCC,0BAkCTT,OAAO,CAACC,GAAR,CAAY,YAAMQ,QAAN,CAAeI,IAA3B,EACAb,OAAO,CAACC,GAAR,CAAY,YAAMQ,QAAN,CAAeG,MAA3B,EAnCS,gCAoCF,YAAMH,QAAN,CAAeG,MApCb,cAqCA,YAAME,OArCN,0DAsCF,YAAMA,OAtCJ,0CAwCF,GAxCE,uE","sourcesContent":["export default async function add(something) {\n  function getCookie(name) {\n    var nameEQ = name + '='\n    var ca = document.cookie.split(';')\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i]\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length)\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length)\n    }\n    return null\n  }\n  const uid = getCookie('uid')\n  const url = `${process.env.PUBLIC_URL}` + '/api/admins/' + uid\n  const token = getCookie('token')\n  try {\n    console.log('json post:', JSON.stringify(something))\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(something),\n    })\n\n    if (response.ok) {\n      return await response.json()\n    }\n    if (response.status <= 501) {\n      console.log(response.status)\n      return response.status\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data)\n      console.log(error.response.status)\n      return error.response.status\n    } else if (error.request) {\n      return error.request\n    } else {\n      return 999\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}