{"ast":null,"code":"export default async function post(something, uid) {\n  const url = `${process.env.PUBLIC_URL}` + \"/api/tokens/\" + uid;\n\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/problem+json; charset=utf-8\"\n      },\n      body: JSON.stringify(something)\n    });\n\n    if (response.ok) {\n      return await response.json();\n    }\n\n    if (response.status <= 501) {\n      return response.status;\n    }\n  } catch (error) {\n    if (error.response) {\n      return error.response.status;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return 999;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/service/postlogin.js"],"names":["post","something","uid","url","process","env","PUBLIC_URL","response","fetch","method","headers","body","JSON","stringify","ok","json","status","error","request"],"mappings":"AAAA,eAAe,eAAeA,IAAf,CAAoBC,SAApB,EAA+BC,GAA/B,EAAoC;AACjD,QAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,EAA1B,GAA8B,cAA9B,GAA+CJ,GAA3D;;AACA,MAAI;AACF,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAChCM,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFuB;AAKhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,SAAf;AAL0B,KAAN,CAA5B;;AAQA,QAAIM,QAAQ,CAACO,EAAb,EAAiB;AACf,aAAO,MAAMP,QAAQ,CAACQ,IAAT,EAAb;AACD;;AACD,QAAIR,QAAQ,CAACS,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,aAAOT,QAAQ,CAACS,MAAhB;AACD;AACF,GAfD,CAeE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACV,QAAV,EAAoB;AAClB,aAAOU,KAAK,CAACV,QAAN,CAAeS,MAAtB;AACD,KAFD,MAEO,IAAIC,KAAK,CAACC,OAAV,EAAmB;AACxB,aAAOD,KAAK,CAACC,OAAb;AACD,KAFM,MAEA;AACL,aAAO,GAAP;AACD;AACF;AACF","sourcesContent":["export default async function post(something, uid) {\n  const url = `${process.env.PUBLIC_URL}` + \"/api/tokens/\" + uid;\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/problem+json; charset=utf-8\",\n      },\n      body: JSON.stringify(something),\n    });\n\n    if (response.ok) {\n      return await response.json();\n    }\n    if (response.status <= 501) {\n      return response.status;\n    }\n  } catch (error) {\n    if (error.response) {\n      return error.response.status;\n    } else if (error.request) {\n      return error.request;\n    } else {\n      return 999;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}