{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export default function get(){return _get.apply(this,arguments);}function _get(){_get=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"\".concat(process.env.PUBLIC_URL)+'/api/tests/1';_context.prev=1;_context.next=4;return fetch(url);case 4:response=_context.sent;if(!response.ok){_context.next=9;break;}_context.next=8;return response.clone().json().catch(function(){return response.text();});case 8:return _context.abrupt(\"return\",_context.sent);case 9:if(!(response.status<=501)){_context.next=11;break;}return _context.abrupt(\"return\",response.status);case 11:_context.next=22;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);if(!_context.t0.response){_context.next=20;break;}console.log(_context.t0.response.headers);return _context.abrupt(\"return\",_context.t0.response.status);case 20:if(_context.t0.request){console.log(_context.t0.request);}else{console.log('Error',_context.t0.message);}case 21:console.log(_context.t0.config);case 22:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return _get.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jittananjackthreemongkol/Documents/GitHub/OCSC/src/service/getTest.js"],"names":["get","url","process","env","PUBLIC_URL","fetch","response","ok","clone","json","catch","text","status","console","log","headers","request","message","config"],"mappings":"qVAAA,uBAA8BA,CAAAA,GAA9B,sC,6EAAe,oJACPC,GADO,CACD,UAAGC,OAAO,CAACC,GAAR,CAAYC,UAAf,EAA8B,cAD7B,uCAGYC,CAAAA,KAAK,CAACJ,GAAD,CAHjB,QAGLK,QAHK,mBAIPA,QAAQ,CAACC,EAJF,+CAKID,CAAAA,QAAQ,CAClBE,KADU,GAEVC,IAFU,GAGVC,KAHU,CAGJ,iBAAMJ,CAAAA,QAAQ,CAACK,IAAT,EAAN,EAHI,CALJ,mEAWPL,QAAQ,CAACM,MAAT,EAAmB,GAXZ,2DAaFN,QAAQ,CAACM,MAbP,+FAiBP,YAAMN,QAjBC,0BAmBTO,OAAO,CAACC,GAAR,CAAY,YAAMR,QAAN,CAAeS,OAA3B,EAnBS,gCAoBF,YAAMT,QAAN,CAAeM,MApBb,UAqBJ,GAAI,YAAMI,OAAV,CAAmB,CAExBH,OAAO,CAACC,GAAR,CAAY,YAAME,OAAlB,EACD,CAHM,IAGA,CAELH,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqB,YAAMG,OAA3B,EACD,CA3BU,QA4BXJ,OAAO,CAACC,GAAR,CAAY,YAAMI,MAAlB,EA5BW,qE","sourcesContent":["export default async function get() {\n  const url = `${process.env.PUBLIC_URL}` + '/api/tests/1'\n  try {\n    const response = await fetch(url)\n    if (response.ok) {\n      return await response\n        .clone()\n        .json()\n        .catch(() => response.text())\n      // return await response.json();\n    }\n    if (response.status <= 501) {\n \n      return response.status\n    }\n    // return await response.json();\n  } catch (error) {\n    if (error.response) {\n\n      console.log(error.response.headers)\n      return error.response.status\n    } else if (error.request) {\n \n      console.log(error.request)\n    } else {\n   \n      console.log('Error', error.message)\n    }\n    console.log(error.config)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}